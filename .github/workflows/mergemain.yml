name: Merge Continuous Integration

on:
  pull_request:
    types:
      - closed

jobs:
  merge-ci:
      if: github.event.pull_request.merged == true
      runs-on: ubuntu-latest
 
      env:
        GCP_COMPUTE: ${{ secrets.GCP_COMPUTE }}
        DB_NAME:     ${{ secrets.DB_NAME }}
        DB_USER:     ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_HOST:     ${{ secrets.DB_HOST }}

        PROJECT_ID :          ${{secrets.PROJECT_ID}}
        SOURCE_IMAGE_FAMILY:  ${{secrets.SOURCE_IMAGE_FAMILY}}
        IMAGE_NAME:           ${{secrets.IMAGE_NAME}}
        IMAGE_FAMILY:         ${{secrets.IMAGE_FAMILY}}
        ZONE:                 ${{secrets.ZONE}}       
        SSH_USERNAME:         ${{secrets.SSH_USERNAME}}
        MYSQL_USER:              ${{ secrets.DB_USER }}
        MYSQL_PASSWORD:          ${{ secrets.DB_PASSWORD }}
        MYSQL_DATABASE:          ${{ secrets.DB_NAME }}

        
      steps:
        - run: echo The PR was merged

        - name: Checkout Repository
          uses: actions/checkout@v2


        - name: Start MySQL
          run: |
                sudo /etc/init.d/mysql start
                sudo service mysql status  
        
    
        - name: Create Database
          run: mysql -h ${{secrets.DB_HOST}} --port 3306 -u${{secrets.DB_USER}} -p${{secrets.DB_PASSWORD}} -e "CREATE DATABASE ${{ secrets.DB_NAME }};"
         
    
        - name: Check Databases
          run: mysql --port=3306 -u${{secrets.DB_USER}} -p${{secrets.DB_PASSWORD}} -e "SHOW DATABASES;"
    
    
        - name: Checkout Repository
          uses: actions/checkout@v2
        
        # - name: Debug Check Variables
        #   run: mysql -h 127.0.0.1 --port 3306 -u ${{secrets.DB_USERNAME}} -p${{secrets.DB_PASSWORD}}
     
        - name: Debug Environment Variables
          run: echo "DB_HOST=${{ secrets.DB_HOST }} DB_USER=${{ secrets.DB_USER }} DB_PASSWORD=${{ secrets.DB_PASSWORD }} DB_NAME=${{ secrets.DB_NAME }}"
        
        - name: Install Dependencies
          run: npm ci
    
        # - name: Check MySQL Status
        #   run: echo "SHOW STATUS LIKE 'Uptime';" | mysql -u${{ secrets.DB_USER }} -p${{ secrets.DB_PASSWORD }} -h${{ env.DB_HOST }} -P3306 ${{ secrets.DB_NAME }}
    
        - name: Run Integration Tests
          run: npm test
    

        - name: Install Packer
          uses: hashicorp/setup-packer@main
          with:
            version: 1.10.1

        - name: Zip Packer Artifacts
          run: zip -r webapp-main.zip ./*

        - name: Checking directory
          run: ls -la

        - name: Init Packer Template
          run: packer init packertest/example.pkr.hcl

        - name: Format Packer Template
          run: packer fmt packertest/example.pkr.hcl

        - name: Validate Packer Template
          run: packer validate packertest/example.pkr.hcl

        - name: Build Packer Template
          run: packer build packertest/example.pkr.hcl
